{"version":3,"sources":["src/app.ts","src/authConfig.ts","src/environment.ts","src/main.ts","src/resources/index.ts","src/components/authentication/login.ts","src/components/dashboard/dashboard.ts","src/components/helpQuestion/helpQuestions.ts","src/components/helpQuestion/newHelpQuestion.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { autoinject } from 'aurelia-framework';\r\nimport { Router, RouterConfiguration, Next, Redirect, NavigationInstruction } from 'aurelia-router'\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { FetchConfig } from 'aurelia-authentication';\r\nimport { Container } from 'aurelia-dependency-injection';\r\nimport { AuthService } from 'aurelia-authentication';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport * as jwt_decode from 'jwt-decode';\n\r\n@autoinject\r\nexport class App {\r\n    router: Router;\r\n    authenticated: boolean;\n    title: string;\n\r\n    constructor(private http: HttpClient,\n                private config: FetchConfig,\n                private authService: AuthService,\n                private event: EventAggregator) {\r\n        this.configHttp();\n        this.authenticated = this.authService.authenticated;\n        this.title = this.authService.authenticated ? \"Welkom \" + jwt_decode(this.authService.getAccessToken()).name : \"PARTICIPATION\";\r\n    }\r\n\r\n\r\n    configureRouter(config, router) {\r\n        this.router = router;\r\n\r\n        let step = new AuthorizeStep(this.authService);\r\n        config.addAuthorizeStep(step);\r\n\r\n        config.title = 'Aurelia';\r\n        config.map([\n            {\r\n                route: ['nieuw/hulpvraag'],\n                name: 'newHelpQuestion',\n                moduleId: 'components/helpQuestion/newHelpQuestion',\n                auth: true\r\n            },\n            {\r\n                route: ['hulpvragen'],\n                name: 'helpQuestions',\n                moduleId: 'components/helpQuestion/helpQuestions',\n                auth: true\r\n            },\r\n            {\r\n                route: ['dashboard'],\n                name: 'dashboard',\n                moduleId: 'components/dashboard/dashboard',\n                auth: true\r\n            },\r\n            {\r\n                route: ['/', 'login'],\n                name: 'login',\n                moduleId: 'components/authentication/login'\r\n            },\r\n        ]);\r\n    }\r\n\r\n    configHttp(): void {\r\n        this.http.configure(config => {\r\n            config\r\n                .withBaseUrl('api/')\r\n                .withDefaults({\r\n                    method: \"POST\",\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'X-Requested-With': 'Fetch'\r\n                    }\r\n                })\r\n                .withInterceptor({\r\n                    request(request) {\r\n                        console.log(`Requesting ${request.method} ${request.url}`);\r\n                        return request;\r\n                    },\r\n                    response(response: Response) {\r\n                        console.log(`Received ${response.status} ${response.url}`);\r\n                        return response;\r\n                    }\r\n                });\r\n        });\r\n\r\n        this.config.configure(this.http);\r\n    }\n\n\n    attached() {\r\n        this.event.subscribe('signedIn', response => {\r\n            this.authenticated = response;\r\n            this.title = \"Welkom \" + jwt_decode(this.authService.getAccessToken()).name;\r\n        });\r\n    }\n\n    logout() {\r\n        return this.authService.logout()\r\n            .then(() => {\r\n                this.authenticated = this.authService.authenticated;\r\n                this.router.navigate(\"login\");\r\n                this.title = \"PARTICIPATION\";\r\n\r\n                swal({\r\n                    title: \"Bedankt voor uw bezoek\",\r\n                    type: \"success\",\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\n@autoinject\r\nclass AuthorizeStep {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    run(navigationInstruction: NavigationInstruction, next: Next): Promise<any> {\r\n        if (navigationInstruction.getAllInstructions().some(i => i.config.auth)) {\r\n            let isLoggedIn = this.authService.isAuthenticated();\r\n\r\n            if (!isLoggedIn) {\r\n                return next.cancel(new Redirect('login'));\r\n            }\r\n        }\r\n\r\n        return next();\r\n    }\r\n}\n\r\n\r\n","var config = {\r\n    providers: {\r\n        google: {\r\n            name: 'google',\r\n            clientId: '833710645751-q02snmqimmijs2jdk9orckpmfdvi53dt.apps.googleusercontent.com'\r\n        }\r\n    }\r\n}\r\n\r\nexport default config;","export default {\n  debug: true,\n  testing: true\n};\n","import { Aurelia } from 'aurelia-framework'\r\nimport environment from './environment';\r\nimport config from './authConfig'\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n    aurelia.use\r\n        .standardConfiguration()\r\n        .feature('resources')\r\n        .plugin('aurelia-authentication',\r\n        (baseConfig) => {\r\n            baseConfig.configure(config);\r\n        });\r\n\r\n    if (environment.debug) {\r\n        aurelia.use.developmentLogging();\r\n    }\r\n\r\n    if (environment.testing) {\r\n        aurelia.use.plugin('aurelia-testing');\r\n    }\r\n\r\n    aurelia.start().then(() => aurelia.setRoot());\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import * as swal from 'sweetalert';\r\nimport { autoinject } from \"aurelia-framework\"\r\nimport { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { AuthService } from \"aurelia-authentication\"\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { Router } from 'aurelia-router'\r\n\r\n@autoinject\r\nexport class FetchClientDemo {\r\n\r\n    email = \"\";\r\n    password = \"\";\r\n\r\n    constructor(private auth: AuthService,\n                private http: HttpClient,\n                private router: Router,\n                private event: EventAggregator) {\r\n    }\r\n\r\n    login() {\r\n        this.auth.login({\r\n            email: this.email,\r\n            password: this.password\r\n        }).then(response => {\n            this.event.publish('signedIn', true);\n\r\n            swal({\r\n                title: \"U bent succesvol ingelogd\",\r\n                type: \"success\",\r\n                showCancelButton: false,\r\n                showConfirmButton: false,\n                timer: 2000\r\n            });\r\n\r\n            this.router.navigate(\"dashboard\");\r\n        })\r\n            .catch(err => {\r\n                swal({\r\n                    title: \"Inloggegevens zijn onjuist\",\r\n                    type: \"warning\",\r\n                    showCancelButton: true,\r\n                    showConfirmButton: false,\r\n                    closeOnConfirm: true\r\n                });\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        this.auth.logout('');\r\n    }\r\n\r\n    async test() {\r\n\r\n    }\r\n} ","export class dashboard {\r\n\r\n}","import { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { autoinject } from \"aurelia-framework\"\r\n\r\n@autoinject\r\nexport class helpQuestions {\r\n\r\n    questions = [];\r\n\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.fetchQuestions();\r\n    }\r\n\r\n    fetchQuestions() {\r\n        this.http.fetch('helpquestion/index')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.questions = data;\r\n            });\r\n    }\r\n\r\n    destroy(question) {\r\n        swal({\r\n            title: 'Weet u het zeker?',\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Ja verwijder deze hulpvraag',\r\n            cancelButtonText: 'Stop!',\r\n            confirmButtonColor: '#002e5b',\r\n        }, (isOk) => {\r\n            if (isOk) {\r\n                this.http.fetch('helpquestion/destroy', {\r\n                    body: json(question)\r\n                }).then(data => {\r\n                    this.questions = this.questions.filter((obj) => obj.id != question.id);\r\n\r\n                    swal({\r\n                        title: 'Verwijderd',\r\n                        text: 'Hulpvraag is succesvol verwijderd',\r\n                        type: 'success',\r\n                        showConfirmButton: false,\r\n                        timer: 3000\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n}","import { HttpClient, json } from \"aurelia-fetch-client\"\nimport { autoinject } from \"aurelia-framework\"\r\nimport { Router } from 'aurelia-router'\r\n\n@autoinject\nexport class newHelpQuestion {\n    question: { question: \"\", urgent: 0 };\n\n    constructor(private http: HttpClient, private router: Router) { }\n\n    store() {\r\n        this.http.fetch('helpquestion/store', {\r\n            body: json(this.question)\r\n        }).then(response => {\r\n            if (response.status == 200) {\r\n                swal({\r\n                    title: \"Hulpvraag succesvol aangemaakt\",\r\n                    type: \"success\",\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n            }\n\n            this.router.navigate(\"hulpvragen\");\r\n        });\r\n    }\r\n}"],"sourceRoot":"../.."}