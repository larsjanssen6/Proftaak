{"version":3,"sources":["src/app.ts","src/authConfig.ts","src/environment.ts","src/main.ts","src/resources/index.ts","src/components/dashboard/dashboard.ts","src/components/authentication/login.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { autoinject } from 'aurelia-framework';\r\nimport { Router, RouterConfiguration } from 'aurelia-router'\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { FetchConfig } from 'aurelia-authentication';\r\nimport { Container } from 'aurelia-dependency-injection';\n\r\n@autoinject\r\nexport class App {\r\n    router: Router;\r\n\r\n    constructor(private http: HttpClient, private config: FetchConfig) {\r\n        this.configHttp();\r\n    }\n\r\n\r\n    configureRouter(config, router) {\r\n        this.router = router;\n\n        config.addPipelineStep('authorize', AuthorizeStep);\n\r\n        config.title = 'Aurelia';\r\n        config.map([\n            { route: ['/', 'dashboard'], name: 'dashboard', moduleId: 'components/dashboard/dashboard', auth: true },\r\n            { route: ['/', 'login'], name: 'login', moduleId: 'components/authentication/login' },\n        ]);\r\n    }\r\n\r\n    configHttp(): void {\r\n        this.http.configure(config => {\r\n            config\r\n                .withBaseUrl('api/')\r\n                .withDefaults({\r\n                    method: \"POST\",\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'X-Requested-With': 'Fetch'\r\n                    }\r\n                })\r\n                .withInterceptor({\r\n                    request(request) {\r\n                        console.log(`Requesting ${request.method} ${request.url}`);\r\n                        return request;\r\n                    },\r\n                    response(response: Response) {\r\n                        console.log(`Received ${response.status} ${response.url}`);\r\n                        return response;\r\n                    }\r\n                });\r\n        });\r\n\r\n        this.config.configure(this.http);\r\n    }\r\n}\n\nclass AuthorizeStep {\r\n    run(routingContext, next) {\r\n        if (routingContext.nextInstructions.some(i => i.config.auth)) {\r\n            var isLoggedIn = AuthorizeStep.isLoggedIn();\r\n            if (!isLoggedIn) {\r\n                return next.cancel();\r\n            }\r\n        }\r\n        return next();\r\n    }\r\n\r\n    static isLoggedIn(): boolean {\r\n        var auth_token = localStorage.getItem(\"auth_token\");\r\n        return (typeof auth_token !== \"undefined\" && auth_token !== null);\r\n    }\r\n}\r\n\r\n","var config = {\r\n    providers: {\r\n        google: {\r\n            name: 'google',\r\n            clientId: '833710645751-q02snmqimmijs2jdk9orckpmfdvi53dt.apps.googleusercontent.com'\r\n        }\r\n    }\r\n}\r\n\r\nexport default config;","export default {\n  debug: true,\n  testing: true\n};\n","import { Aurelia } from 'aurelia-framework'\r\nimport environment from './environment';\r\nimport config from './authConfig'\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n    aurelia.use\r\n        .standardConfiguration()\r\n        .feature('resources')\r\n        .plugin('aurelia-authentication',\r\n        (baseConfig) => {\r\n            baseConfig.configure(config);\r\n        });\r\n\r\n    if (environment.debug) {\r\n        aurelia.use.developmentLogging();\r\n    }\r\n\r\n    if (environment.testing) {\r\n        aurelia.use.plugin('aurelia-testing');\r\n    }\r\n\r\n    aurelia.start().then(() => aurelia.setRoot());\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","export class dashboard {\n\r\n}","import * as swal from 'sweetalert';\nimport { autoinject } from \"aurelia-framework\"\r\nimport { HttpClient, json } from \"aurelia-fetch-client\"\r\nimport { AuthService } from \"aurelia-authentication\"\r\n\r\n@autoinject\r\nexport class FetchClientDemo {\r\n\n    email = \"\";\r\n    password = \"\";\n\r\n    constructor(private auth: AuthService, private http: HttpClient) {\r\n    }\r\n\r\n    login() {\r\n        this.auth.login({\r\n            email: this.email,\r\n            password: this.password\r\n        }).then(response => {\r\n            swal({\r\n                title: \"U bent succesvol ingelogd\",\r\n                type: \"success\",\r\n                showCancelButton: true,\n                showConfirmButton: false,\r\n                closeOnConfirm: true\r\n            });\r\n        })\r\n            .catch(err => {\r\n                swal({\r\n                    title: \"Inloggegevens zijn onjuist\",\r\n                    type: \"warning\",\r\n                    showCancelButton: true,\n                    showConfirmButton: false,\r\n                    closeOnConfirm: true\r\n                });\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        this.auth.logout('');\r\n    }\n\n    async test() {\n\n    }\r\n} "],"sourceRoot":"../.."}